//show VMs with permissive
resources
| where type == "microsoft.compute/virtualmachines"
| extend vmId = tolower(id)
| project vmId, vmName = name, subscriptionId, resourceGroup, location
| join kind=leftouter (
    resources
    | where type == "microsoft.network/networkinterfaces"
    | extend nicProperties = properties
    | project nicId = tolower(id), nicName = name, vmRef = tolower(properties.virtualMachine.id), 
              nsgRef = tolower(properties.networkSecurityGroup.id), subnetRef = tolower(properties.ipConfigurations[0].properties.subnet.id)
) on $left.vmId == $right.vmRef
| where isnotempty(nicId) // Ensure we only keep NICs tied to VMs
| join kind=leftouter (
    resources
    | where type == "microsoft.network/networksecuritygroups"
    | extend nsgId = tolower(id), nsgRules = properties.securityRules
    | mv-expand nsgRules
    | where nsgRules.properties.direction == "Inbound"
    | where nsgRules.properties.sourceAddressPrefix == "0.0.0.0/0" or array_length(nsgRules.properties.sourceAddressPrefixes) > 0 and "0.0.0.0/0" in (nsgRules.properties.sourceAddressPrefixes)
    | project nsgId, ruleName = nsgRules.name, destinationPortRange = nsgRules.properties.destinationPortRange, protocol = nsgRules.properties.protocol
) on $left.nsgRef == $right.nsgId
| join kind=leftouter (
    resources
    | where type == "microsoft.network/virtualnetworks"
    | mv-expand subnet = properties.subnets
    | extend subnetId = tolower(subnet.id), subnetNsgRef = tolower(subnet.properties.networkSecurityGroup.id)
    | project subnetId, subnetNsgRef
    | join kind=leftouter (
        resources
        | where type == "microsoft.network/networksecuritygroups"
        | extend nsgId = tolower(id), nsgRules = properties.securityRules
        | mv-expand nsgRules
        | where nsgRules.properties.direction == "Inbound"
        | where nsgRules.properties.sourceAddressPrefix == "0.0.0.0/0" or array_length(nsgRules.properties.sourceAddressPrefixes) > 0 and "0.0.0.0/0" in (nsgRules.properties.sourceAddressPrefixes)
        | project nsgId, subnetRuleName = nsgRules.name, subnetDestPortRange = nsgRules.properties.destinationPortRange, subnetProtocol = nsgRules.properties.protocol
    ) on $left.subnetNsgRef == $right.nsgId
) on $left.subnetRef == $right.subnetId
| where isnotempty(ruleName) or isnotempty(subnetRuleName) // VMs exposed via NIC NSG or Subnet NSG
| project 
    vmName, 
    subscriptionId, 
    resourceGroup, 
    location, 
    nicName, 
    publicIP = iff(array_length(nicProperties.ipConfigurations) > 0 and isnotempty(nicProperties.ipConfigurations[0].properties.publicIPAddress), "Yes", "No"),
    exposedViaNicRule = ruleName, 
    nicPortRange = destinationPortRange, 
    nicProtocol = protocol,
    exposedViaSubnetRule = subnetRuleName, 
    subnetPortRange = subnetDestPortRange, 
    subnetProtocol = subnetProtocol
| order by vmName asc